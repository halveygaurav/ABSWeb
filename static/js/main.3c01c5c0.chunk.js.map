{"version":3,"sources":["images/searchIcon.jpg","components/SignUp.js","components/Signin.js","components/Dashboard.js","components/navigation.js","components/deptModel.js","redux/department/departmentActions.js","redux/department/departmentTypes.js","components/departments.js","components/empModel.js","redux/employee/employeeActions.js","redux/employee/employeeTypes.js","components/employees.js","components/footer.js","redux/state.js","redux/rootReducer.js","redux/department/departmentReducer.js","redux/employee/employeeReducer.js","redux/store.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Signup","isOpen","closePopup","Modal","setAppElement","className","onRequestClose","onClick","initialValues","UserName","Email","Password","confirmPassword","FirstName","LastName","DateOfBirth","PhoneNumber","onSubmit","values","resetForm","axios","post","then","response","catch","error","console","log","validate","errors","test","name","component","placeholder","type","id","Signin","email","password","Dashboard","useState","signup","setSignup","signin","setSignin","icon","faSearch","React","memo","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","to","props","show","size","aria-labelledby","centered","Header","closeButton","onHide","Title","department","isEdit","Body","Row","Col","sm","Form","autoComplete","event","preventDefault","editDepartment","DeptId","target","DepartmentId","value","DepartmentName","saveDepartment","Group","controlId","Label","Control","required","defaultValue","deptId","disabled","deptName","Button","variant","Footer","fetchDepartments","dispatch","get","departments","data","payload","getDepartmentData","message","postDepartment","params","callBack","putDepartment","onSuccess","put","deleteDepartment","delete","connect","state","departmentReducer","postResponse","getDepartments","bindActionCreators","showModalAdd","setShowModalAdd","showModalEdit","setShowModalEdit","setdepartment","useEffect","Table","striped","border","hover","loading","ProgressBar","animated","now","map","index","key","ButtonToolbar","toast","deptData","msg","JSON","stringify","Snackbar","anchorOrigin","vertical","horizontal","open","showSnack","autoHideDuration","onClose","snackbar","action","IconButton","arial-label","color","employee","editEmployee","EmpId","EmployeeId","EmpName","EmployeeName","Doj","saveEmployee","empId","empName","doj","fetchEmployees","employees","getEmployeeData","postEmployee","putEmployee","deleteEmployee","employeeReducer","postResponseEmployee","getEmployees","showSnackbar","setSnackbar","depId","setEmployee","showSnackbarHandle","success","empData","intialState","rootReducer","combineReducers","update","$set","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","path","exact","Departments","Employees","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c01c5c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/searchIcon.fc8e6cb1.jpg\";","import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport axios from 'axios';\r\nconst Signup = ({ isOpen, closePopup }) => {\r\n    Modal.setAppElement('#root');\r\n\r\n    const initialValues = {\r\n        UserName: '',\r\n        Email: '',\r\n        Password: '',\r\n        confirmPassword: '',\r\n        FirstName: '',\r\n        LastName: '',\r\n        DateOfBirth: '',\r\n        PhoneNumber: ''\r\n    }\r\n\r\n    const onSubmit = (values,{resetForm}) => {\r\n        axios.post('http://www.absweb.somee.com/api/account/register', values)\r\n            .then((response) => {\r\n                resetForm({});\r\n            })\r\n            .catch((error) => console.log(error))\r\n//        console.log(values)\r\n\r\n    }\r\n\r\n    const validate = values => {\r\n        const errors = {}\r\n        if (!values.FirstName)\r\n            errors.FirstName = \"First Name is required\"\r\n        if (!values.LastName)\r\n            errors.LastName = \"Last Name is required\"\r\n        if (!values.Email)\r\n            errors.Email = \"Email is required\";\r\n        else if (!/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(values.Email))\r\n            errors.Email = \"Invalid Email format\"\r\n        if (!values.PhoneNumber)\r\n            errors.PhoneNumber = \"Mobile number is required\"\r\n        else if (!/^(\\+\\d{1,3}[- ]?)?\\d{10}$/.test(values.PhoneNumber))\r\n            errors.PhoneNumber = \"Invalid Mobile number\"\r\n        if (!values.DateOfBirth)\r\n            errors.DateOfBirth = \"Date of Birth is required\"\r\n        if (!values.Password)\r\n            errors.Password = \"Password is required\"\r\n        if (!values.confirmPassword)\r\n            errors.confirmPassword = \"Re-type Password is required\"\r\n        else if (values.Password !== values.confirmPassword)\r\n             errors.confirmPassword = \"Password is not matched\"\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={isOpen}\r\n            className=\"signupmodal\"\r\n            onRequestClose={closePopup}\r\n        >\r\n\r\n            <div className=\"signupcontainer\">\r\n                <div className=\"close\" onClick={closePopup}>&times;</div>\r\n                <div className=\"leftside\">\r\n                    <div className=\"signuptextupper\">Looks like you're new here!</div>\r\n                    <div className=\"signuptextlower\">Sign up with your details to get started</div>\r\n                    <div className=\"signupimage\"></div>\r\n                </div>\r\n                <div className=\"rightside\">\r\n                    <Formik initialValues={initialValues}\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                    >\r\n                        <Form>\r\n                            <h1>Sign Up</h1>\r\n                            <ErrorMessage name=\"FirstName\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"First Name\"\r\n                                type=\"text\"\r\n                                id=\"FirstName\"\r\n                                name=\"FirstName\"\r\n                            />\r\n\r\n                            <ErrorMessage name=\"LastName\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"Last Name\"\r\n                                type=\"text\"\r\n                                id=\"LastName\"\r\n                                name=\"LastName\" />\r\n\r\n\r\n                            <ErrorMessage name=\"Email\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"E-mail\"\r\n                                type=\"text\"\r\n                                id=\"Email\"\r\n                                name=\"Email\"\r\n                            />\r\n\r\n                            <ErrorMessage name=\"PhoneNumber\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"Enter Mobile number\"\r\n                                type=\"text\"\r\n                                id=\"PhoneNumber\"\r\n                                name=\"PhoneNumber\"\r\n                            />\r\n\r\n                            <ErrorMessage name=\"DateOfBirth\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"Date of Birth-mm/dd/yyyy\"\r\n                                type=\"text\"\r\n                                id=\"DateOfBirth\"\r\n                                name=\"DateOfBirth\"\r\n                            />\r\n\r\n                            <ErrorMessage name=\"Password\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"Password\"\r\n                                type=\"Password\"\r\n                                id=\"Password\"\r\n                                name=\"Password\" />\r\n\r\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"Re-type Password\"\r\n                                type=\"Password\"\r\n                                id=\"confirmPassword\"\r\n                                name=\"confirmPassword\" />\r\n\r\n                            <button type=\"submit\">Sign Up</button>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default Signup;","import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nconst Signin = ({ isOpen, closePopup }) => {\r\n    Modal.setAppElement('#root');\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        \r\n    }\r\n\r\n    const onSubmit = values => {\r\n        console.log(values)\r\n\r\n    }\r\n\r\n    const validate = values => {\r\n       const errors={}\r\n        if (!values.email)\r\n            errors.email = \"Email is required\";\r\n        else if (!/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(values.email))\r\n             errors.email = \"Invalid email format\"\r\n        if (!values.password)\r\n            errors.password = \"Password is required\"\r\n        \r\n        return errors;\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={isOpen}\r\n            className=\"signinmodal\"\r\n            onRequestClose={closePopup}\r\n        >\r\n\r\n            <div className=\"signincontainer\">\r\n                <div className=\"close\" onClick={closePopup}>&times;</div>\r\n                <div className=\"formcontainer\">\r\n                    <Formik initialValues={initialValues}\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                    >\r\n                        <Form>\r\n                            <h1>Sign In</h1>\r\n                \r\n                            <ErrorMessage name=\"email\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"E-mail\"\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                            />\r\n\r\n                \r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <Field\r\n                                placeholder=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\" />\r\n                                                       \r\n                            <button type=\"submit\">Sign In</button>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default Signin;","import React, { useState } from 'react';\r\nimport '../styles/absweb.css'\r\n //import '../styles/abswebsecond.css'\r\nimport Signup from './SignUp'\r\nimport Signin from './Signin'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap'\r\nconst Dashboard = () => {\r\n    const [signup, setSignup] = useState(false)\r\n    const closePopupHandlerSignup = () => {\r\n        setSignup(false);\r\n    }\r\n    const [signin, setSignin] = useState(false)\r\n    const closePopupHandlerSignin = () => {\r\n        setSignin(false);\r\n    }\r\n    return (\r\n       \r\n        <div className=\"parentcontainer\">\r\n            <div className=\"firstheader\">\r\n                <div className=\"searchcontainer\">\r\n                    <input placeholder=\"Search here\" className=\"searchbox\" type=\"text\" /><FontAwesomeIcon className=\"searchicon\" icon={faSearch} />\r\n                </div>\r\n                <button onClick={() => setSignin(true)}className=\"loginbutton\">Login</button>\r\n                <button onClick={() => setSignup(true)} className=\"signupbutton\">Sign Up</button>\r\n            </div>\r\n            {/* <div className=\"secondheader\">Header</div>\r\n            <div className=\"container\">\r\n                <div className=\"leftarea\">Leftarea</div>\r\n                <div className=\"maincontainer\">Maincontainer</div>\r\n                <div className=\"rightarea\">Rightarea</div>\r\n            </div>\r\n            <div className=\"footer\">Footer</div> */}\r\n            <Signup isOpen={signup} closePopup={closePopupHandlerSignup} />\r\n            <Signin isOpen={signin} closePopup={closePopupHandlerSignin} />\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Dashboard;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nconst Navigation = () => {\r\n    console.log('navigation render')\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" />\r\n            <Nav>\r\n            <NavLink to=\"/\" className=\"d-inline p-2 bg-dark text-white\" >\r\n                    Home</NavLink>\r\n\r\n                    <NavLink to=\"/Departments\" className=\"d-inline p-2 bg-dark text-white\" >\r\n                Departments</NavLink>\r\n\r\n                <NavLink to=\"/Employees\" className=\"d-inline p-2 bg-dark text-white\" >\r\n                Employees</NavLink>\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\nexport default React.memo(Navigation);","import React from 'react';\r\nimport { Modal, Button, Col, Row, Form } from 'react-bootstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst DeptModel = (props) => {\r\n    \r\n    const handleClick = (event) => {\r\n               \r\n        event.preventDefault();\r\n        \r\n        props && props.department && props.department.isEdit?props.editDepartment({ DeptId:event.target.DepartmentId.value,DepartmentName: event.target.DepartmentName.value })\r\n        :props.saveDepartment({ DepartmentName: event.target.DepartmentName.value })\r\n       \r\n    }\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            \r\n            \r\n            <Modal\r\n                show={props.show}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton onClick={props.onHide}>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.department && props.department.isEdit? 'Edit Department Details':'Add Department Details'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Body>\r\n                \r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form autoComplete=\"off\" onSubmit={handleClick}>\r\n                            {props.department && props.department.isEdit &&\r\n                            <Form.Group controlId=\"DepartmentId\">\r\n                                    <Form.Label>DepartmentId</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"DepartmentId\"\r\n                                        required\r\n                                        defaultValue={props.department.deptId}\r\n                                        placeholder=\"DepartmentId\"\r\n                                        disabled=\"true\"\r\n                                    />\r\n                                </Form.Group>}\r\n                                <Form.Group controlId=\"DepartmentName\">\r\n                                    <Form.Label>DepartmentName</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"DepartmentName\"\r\n                                        required\r\n                                        placeholder=\"DepartmentName\"\r\n                                        defaultValue={props.department && props.department.deptName}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">{props.department && props.department.isEdit ? 'Edit Department' : 'Add Department'}</Button>\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default React.memo(DeptModel)","import {\r\n    GET_DEPARTMENT_REQUEST,\r\n    GET_DEPARTMENT_REQUEST_SUCCESS,\r\n    GET_DEPARTMENT_REQUEST_FAILURE,\r\n    SAVE_DEPARTMENT_REQUEST,\r\n    SAVE_DEPARTMENT_REQUEST_SUCCESS,\r\n    SAVE_DEPARTMENT_REQUEST_FAILURE,\r\n    EDIT_DEPARTMENT_REQUEST,\r\n    EDIT_DEPARTMENT_REQUEST_SUCCESS,\r\n    EDIT_DEPARTMENT_REQUEST_FAILURE,\r\n    DELETE_DEPARTMENT_REQUEST,\r\n    DELETE_DEPARTMENT_REQUEST_SUCCESS,\r\n    DELETE_DEPARTMENT_REQUEST_FAILURE\r\n\r\n} from './departmentTypes'\r\nimport axios from 'axios'\r\nexport const getDepartmentRequest = () => {\r\n    return {\r\n\r\n        type: GET_DEPARTMENT_REQUEST\r\n    }\r\n}\r\nexport const getDepartmentData = (departments) => {\r\n    return {\r\n        type: GET_DEPARTMENT_REQUEST_SUCCESS,\r\n        payload: departments,\r\n    }\r\n}\r\nexport const getDepartmentError = (message) => {\r\n    return {\r\n        type: GET_DEPARTMENT_REQUEST_FAILURE,\r\n        payload: message,\r\n\r\n    }\r\n}\r\n//Create a wrapper for all api request(custom async hook----intercepter)\r\nexport const fetchDepartments = () => {\r\n    return (dispatch) => {\r\n        dispatch(getDepartmentRequest())\r\n        // axios.get('http://www.absweb.somee.com/api/department')\r\n        axios.get('http://www.absweb.somee.com/api/department')\r\n        \r\n            .then(response => {\r\n\r\n                const departments = response.data;\r\n                dispatch(getDepartmentData(departments))\r\n            })\r\n            .catch(error => {\r\n                \r\n                dispatch(getDepartmentError(error.message))\r\n            })\r\n    }\r\n}\r\n\r\nconst saveDepartmentRequest = () => {\r\n    return {\r\n        type: SAVE_DEPARTMENT_REQUEST\r\n    }\r\n}\r\nconst saveDepartmentSuccess = (departments) => {\r\n    return {\r\n        type: SAVE_DEPARTMENT_REQUEST_SUCCESS,\r\n        payload: departments\r\n    }\r\n}\r\nconst saveDepartmentFailure = (message) => {\r\n    return {\r\n        type: SAVE_DEPARTMENT_REQUEST_FAILURE,\r\n        payload: message\r\n    }\r\n}\r\nexport const  postDepartment = (params,callBack) => {\r\n    return (dispatch) => {\r\n        dispatch(saveDepartmentRequest())\r\n        axios.post('http://www.absweb.somee.com/api/department', params)\r\n            .then(response => {\r\n                dispatch(saveDepartmentSuccess(response.data))\r\n                callBack(\"Department save successfully\");\r\n            })\r\n            .catch(error => {\r\n                \r\n                dispatch(saveDepartmentFailure(error.message))\r\n                callBack(error.message);\r\n\r\n            })\r\n    }\r\n}\r\n\r\nconst editDepartmentRequest = () => {\r\n    return {\r\n        type: EDIT_DEPARTMENT_REQUEST\r\n    }\r\n}\r\nconst editDepartmentSuccess = (departments) => {\r\n    return {\r\n        type: EDIT_DEPARTMENT_REQUEST_SUCCESS,\r\n        payload: departments\r\n    }\r\n}\r\nconst editDepartmentFailure = (message) => {\r\n    return {\r\n        type: EDIT_DEPARTMENT_REQUEST_FAILURE,\r\n        payload: message\r\n    }\r\n}\r\nexport const putDepartment = (params,onSuccess) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(editDepartmentRequest())\r\n        axios.put('http://www.absweb.somee.com/api/department', params)\r\n            .then(response => {\r\n                dispatch(editDepartmentSuccess(response.data))\r\n                onSuccess();\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch(editDepartmentFailure(error.message))\r\n\r\n            })\r\n    }\r\n}\r\nconst deleteDepartmentRequest = () => {\r\n    return {\r\n        type: DELETE_DEPARTMENT_REQUEST\r\n    }\r\n}\r\nconst deleteDepartmentSuccess = (departments) => {\r\n\r\n    return {\r\n        type: DELETE_DEPARTMENT_REQUEST_SUCCESS,\r\n        payload: departments\r\n    }\r\n}\r\nconst deleteDepartmentFailure = (message) => {\r\n\r\n    return {\r\n\r\n        type: DELETE_DEPARTMENT_REQUEST_FAILURE,\r\n        payload: message\r\n    }\r\n}\r\nexport const deleteDepartment = (id) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(deleteDepartmentRequest())\r\n        axios.delete(`http://www.absweb.somee.com/api/department/${id}`)\r\n\r\n            .then(response => {\r\n\r\n                dispatch(deleteDepartmentSuccess(response.data))\r\n                \r\n                \r\n            })\r\n            .catch(error => {\r\n                \r\n                dispatch(deleteDepartmentFailure(error.message))\r\n\r\n            })\r\n    }\r\n}","export const GET_DEPARTMENT_REQUEST='GET_DEPARTMENT_REQUEST'\r\nexport const GET_DEPARTMENT_REQUEST_SUCCESS='GET_DEPARTMENT_REQUEST_SUCCESS'\r\nexport const GET_DEPARTMENT_REQUEST_FAILURE='GET_DEPARTMENT_REQUEST_FAILURE'\r\n\r\nexport const SAVE_DEPARTMENT_REQUEST='SAVE_DEPARTMENT_REQUEST'\r\nexport const SAVE_DEPARTMENT_REQUEST_SUCCESS='SAVE_DEPARTMENT_REQUEST_SUCCESS'\r\nexport const SAVE_DEPARTMENT_REQUEST_FAILURE='SAVE_DEPARTMENT_REQUEST_FAILURE'\r\n\r\n\r\nexport const EDIT_DEPARTMENT_REQUEST='EDIT_DEPARTMENT_REQUEST'\r\nexport const EDIT_DEPARTMENT_REQUEST_SUCCESS='EDIT_DEPARTMENT_REQUEST_SUCCESS'\r\nexport const EDIT_DEPARTMENT_REQUEST_FAILURE='EDIT_DEPARTMENT_REQUEST_FAILURE'\r\n\r\nexport const DELETE_DEPARTMENT_REQUEST='DELETE_DEPARTMENT_REQUEST'\r\nexport const DELETE_DEPARTMENT_REQUEST_SUCCESS='DELETE_DEPARTMENT_REQUEST_SUCCESS'\r\nexport const DELETE_DEPARTMENT_REQUEST_FAILURE='DELETE_DEPARTMENT_REQUEST_FAILURE'","import React, { useState, useEffect, } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport DeptModel from './deptModel'\r\nimport { bindActionCreators } from 'redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { fetchDepartments, postDepartment, putDepartment, deleteDepartment } from '../redux/department/departmentActions'\r\nconst Departments = ({ departments,\r\n    getDepartments,\r\n    saveDepartment,\r\n    editDepartment,\r\n    deleteDepartment,\r\n    postResponse }) => {\r\n\r\n\r\n\r\n    const [showModalAdd, setShowModalAdd] = useState(false)\r\n    const [showModalEdit, setShowModalEdit] = useState(false)\r\n    const [department, setdepartment] = useState({ deptId: 0, deptName: '', isEdit: false });\r\n    const handleSaveDepartment = (deptData) => {\r\n\r\n        saveDepartment(deptData,(msg)=>toast(msg))\r\n        // saveDepartment(deptData)\r\n        //  .then( \r\n            \r\n        //     ()=>{\r\n                \r\n        //         toast(\"Department save successfully\")\r\n                \r\n        //     }\r\n        //         )\r\n\r\n      \r\n    }\r\n\r\n    const handleEditDepartment = (deptData) => {\r\n\r\n        //const data=JSON.stringify(deptData)\r\n        editDepartment(deptData,()=>toast(\"Department modify successfully\"))\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    const handleEdit = (id, name) => {\r\n        setShowModalEdit(true)\r\n        setdepartment({ deptId: id, deptName: name, isEdit: true })\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        \r\n        deleteDepartment(id,()=>toast(\"Department remove successfully\"));\r\n        \r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getDepartments();\r\n    }, [getDepartments])\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Table className=\"mt-4\" striped border hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>DepartmentID</th>\r\n                        <th>DepartmentName</th>\r\n                        <th>Option</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                {departments.loading ? <ProgressBar animated now={60} /> :\r\n                    <tbody>\r\n                        {\r\n                            departments && departments.departments\r\n                            && departments.departments.map((department, index) => (\r\n                                <tr key={index}>\r\n\r\n                                    <td>{department.DeptId}</td>\r\n                                    <td>{department.DepartmentName}</td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button\r\n                                                className=\"mr-2\"\r\n                                                variant=\"info\"\r\n                                                onClick={() => handleEdit(department.DeptId, department.DepartmentName)}\r\n\r\n                                            >\r\n                                                Edit\r\n                                        </Button>\r\n                                        </ButtonToolbar>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button\r\n                                                className=\"mr-2\"\r\n                                                variant=\"danger\"\r\n                                                onClick={() => handleDelete(department.DeptId)}\r\n\r\n                                            >\r\n                                                Delete\r\n                                        </Button>\r\n                                        </ButtonToolbar>\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                }\r\n            </Table>\r\n            {departments.loading ? null : <ButtonToolbar>\r\n                <Button variant=\"primary\" onClick={() => { setShowModalAdd(true) }}>\r\n                    Add Department\r\n            </Button>\r\n            </ButtonToolbar>\r\n            }\r\n            <DeptModel\r\n                editDepartment={handleEditDepartment}\r\n                show={showModalEdit}\r\n                onHide={() => setShowModalEdit(false)}\r\n                department={department}\r\n            />\r\n            <DeptModel\r\n                saveDepartment={handleSaveDepartment}\r\n                show={showModalAdd}\r\n                onHide={() => setShowModalAdd(false)}\r\n\r\n            />\r\n            {JSON.stringify(postResponse)}\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        departments: state.departmentReducer,\r\n        postResponse: state.departmentReducer.message\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getDepartments: () => dispatch(fetchDepartments()),\r\n        //saveDepartment: (data) => dispatch(postDepartment(data)),\r\n        //editDepartment: (data) => dispatch(putDepartment(data)),\r\n        //deleteDepartment: (id) => dispatch(deleteDepartment(id))\r\n        getDepartments: bindActionCreators(fetchDepartments, dispatch),\r\n        saveDepartment: bindActionCreators(postDepartment, dispatch),\r\n        editDepartment: bindActionCreators(putDepartment, dispatch),\r\n        deleteDepartment: bindActionCreators(deleteDepartment, dispatch)\r\n\r\n    }\r\n\r\n    // function mapDispatchToProps(dispatch) {\r\n    //     return {\r\n    //         actions: {\r\n    //             updateSearchState: bindActionCreators(searchActions.UpdateSearchState, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Departments));\r\n","import React from 'react';\r\nimport { Modal, Button, Col, Row, Form } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst EmpModel = (props) => {\r\n    console.log('empmodel render')\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        \r\n        props.employee && props.employee.isEdit?props.editEmployee({ \r\n            EmpId:event.target.EmployeeId.value,\r\n            EmpName: event.target.EmployeeName.value, \r\n            DeptId: event.target.DepartmentId.value, \r\n            Email: event.target.Email.value, \r\n            Doj: event.target.Doj.value, \r\n        })\r\n        :props.saveEmployee({ \r\n            EmpName: event.target.EmployeeName.value,\r\n            DeptId: event.target.DepartmentId.value, \r\n            Email: event.target.Email.value, \r\n            Doj: event.target.Doj.value, \r\n        })\r\n        \r\n    }\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            \r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'centre', horizontal: 'center' }}\r\n                open={props && props.showSnack && props.showSnack.value}\r\n                autoHideDuration={5000}\r\n                onClose={props && props.snackbar && props.snackbar}\r\n                message={<span id=\"message-id\">{props && props.showSnack && props.showSnack.message}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        arial-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={props && props.snackbar}\r\n                    >\r\n                        X\r\n        </IconButton>\r\n                ]}\r\n\r\n            />\r\n            <Modal\r\n                show={props.show}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton onClick={props.onHide}>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.employee && props.employee.isEdit?'Edit Employee Details':'Add Employee Details'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Body>\r\n                \r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={handleClick} autoComplete=\"off\">\r\n                            {props.employee && props.employee.isEdit &&\r\n                                <Form.Group controlId=\"EmployeeId\">\r\n                                    <Form.Label>EmployeeId</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"EmployeeId\"\r\n                                        required\r\n                                        defaultValue={props.employee && props.employee.empId}\r\n                                        placeholder=\"EmployeeId\"\r\n                                        disabled=\"true\"\r\n                                    />\r\n                                </Form.Group>}\r\n                                <Form.Group controlId=\"EmployeeName\">\r\n                                    <Form.Label>EmployeeName</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"EmployeeName\"\r\n                                        required\r\n                                        placeholder=\"EmployeeName\"\r\n                                        defaultValue={props.employee && props.employee.empName}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"DepartmentId\">\r\n                                    <Form.Label>DepartmentId</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"DepartmentId\"\r\n                                        required\r\n                                        placeholder=\"DepartmentId\"\r\n                                        defaultValue={props.employee && props.employee.deptId}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"Email\"\r\n                                        required\r\n                                        placeholder=\"Email\"\r\n                                        defaultValue={props.employee && props.employee.email}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Doj\">\r\n                                    <Form.Label>Doj</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"Doj\"\r\n                                        required\r\n                                        placeholder=\"Doj\"\r\n                                        defaultValue={props.employee && props.employee.doj}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">{props.employee && props.employee.isEdit ? 'Edit Employee' : 'Add Employee'}</Button>\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default React.memo(EmpModel)","import {\r\n    GET_EMPLOYEE_REQUEST,\r\n    GET_EMPLOYEE_REQUEST_SUCCESS,\r\n    GET_EMPLOYEE_REQUEST_FAILURE,\r\n    SAVE_EMPLOYEE_REQUEST,\r\n    SAVE_EMPLOYEE_REQUEST_SUCCESS,\r\n    SAVE_EMPLOYEE_REQUEST_FAILURE,\r\n    EDIT_EMPLOYEE_REQUEST,\r\n    EDIT_EMPLOYEE_REQUEST_SUCCESS,\r\n    EDIT_EMPLOYEE_REQUEST_FAILURE,\r\n    DELETE_EMPLOYEE_REQUEST,\r\n    DELETE_EMPLOYEE_REQUEST_SUCCESS,\r\n    DELETE_EMPLOYEE_REQUEST_FAILURE\r\n\r\n} from './employeeTypes'\r\nimport axios from 'axios'\r\nexport const getEmployeeRequest = () => {\r\n    return {\r\n\r\n        type: GET_EMPLOYEE_REQUEST\r\n    }\r\n}\r\nexport const getEmployeeData = (employees) => {\r\n    return {\r\n        type: GET_EMPLOYEE_REQUEST_SUCCESS,\r\n        payload: employees,\r\n    }\r\n}\r\nexport const getEmployeeError = (message) => {\r\n    return {\r\n        type: GET_EMPLOYEE_REQUEST_FAILURE,\r\n        payload: message,\r\n\r\n    }\r\n}\r\n//Create a wrapper for all api request(custom async hook----intercepter)\r\nexport const fetchEmployees = () => {\r\n    return (dispatch) => {\r\n        dispatch(getEmployeeRequest())\r\n        axios.get('http://www.absweb.somee.com/api/employee')\r\n            .then(response => {\r\n                const employees = response.data;\r\n                dispatch(getEmployeeData(employees))\r\n            })\r\n            .catch(error => {\r\n                dispatch(getEmployeeError(error.message))\r\n            })\r\n    }\r\n}\r\n\r\nconst saveEmployeeRequest = () => {\r\n    return {\r\n        type: SAVE_EMPLOYEE_REQUEST\r\n    }\r\n}\r\nconst saveEmployeeSuccess = (employees) => {\r\n    return {\r\n        type: SAVE_EMPLOYEE_REQUEST_SUCCESS,\r\n        payload: employees\r\n    }\r\n}\r\nconst saveEmployeeFailure = (message) => {\r\n    return {\r\n        type: SAVE_EMPLOYEE_REQUEST_FAILURE,\r\n        payload: message\r\n    }\r\n}\r\nexport const postEmployee = (params) => {\r\n     return (dispatch) => {\r\n\r\n        dispatch(saveEmployeeRequest())\r\n        return axios.post('http://www.absweb.somee.com/api/employee', params)\r\n            .then(response => {\r\n                return dispatch(saveEmployeeSuccess(response.data))\r\n                \r\n            })\r\n            .catch(error => {\r\n                \r\n                return dispatch(saveEmployeeFailure(error.message))\r\n                \r\n\r\n            })\r\n    }\r\n}\r\n\r\nconst editEmployeeRequest = () => {\r\n    return {\r\n        type: EDIT_EMPLOYEE_REQUEST\r\n    }\r\n}\r\nconst editEmployeeSuccess = (employees) => {\r\n    return {\r\n        type: EDIT_EMPLOYEE_REQUEST_SUCCESS,\r\n        payload: employees\r\n    }\r\n}\r\nconst editEmployeeFailure = (message) => {\r\n    return {\r\n        type: EDIT_EMPLOYEE_REQUEST_FAILURE,\r\n        payload: message\r\n    }\r\n}\r\nexport const putEmployee = (params) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(editEmployeeRequest())\r\n       return axios.put('http://www.absweb.somee.com/api/employee', params)\r\n            .then(response => {\r\n                return dispatch(editEmployeeSuccess(response.data))\r\n                \r\n            })\r\n            .catch(error => {\r\n              \r\n                return dispatch(editEmployeeFailure(error.message))\r\n\r\n            })\r\n    }\r\n}\r\nconst deleteEmployeeRequest = () => {\r\n    return {\r\n        type: DELETE_EMPLOYEE_REQUEST\r\n    }\r\n}\r\nconst deleteEmployeeSuccess = (employees) => {\r\n\r\n    return {\r\n        type: DELETE_EMPLOYEE_REQUEST_SUCCESS,\r\n        payload: employees\r\n    }\r\n}\r\nconst deleteEmployeeFailure = (message) => {\r\n\r\n    return {\r\n\r\n        type: DELETE_EMPLOYEE_REQUEST_FAILURE,\r\n        payload: message\r\n    }\r\n}\r\nexport const deleteEmployee = (id) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(deleteEmployeeRequest())\r\n        return axios.delete(`http://www.absweb.somee.com/api/employee/${id}`)\r\n\r\n            .then(response => {\r\n                return dispatch(deleteEmployeeSuccess(response.data))\r\n                \r\n\r\n            })\r\n            .catch(error => {\r\n                return dispatch(deleteEmployeeFailure(error.message))\r\n\r\n            })\r\n    }\r\n}","export const GET_EMPLOYEE_REQUEST='GET_EMPLOYEE_REQUEST'\r\nexport const GET_EMPLOYEE_REQUEST_SUCCESS='GET_EMPLOYEE_REQUEST_SUCCESS'\r\nexport const GET_EMPLOYEE_REQUEST_FAILURE='GET_EMPLOYEE_REQUEST_FAILURE'\r\n\r\nexport const SAVE_EMPLOYEE_REQUEST='SAVE_EMPLOYEE_REQUEST'\r\nexport const SAVE_EMPLOYEE_REQUEST_SUCCESS='SAVE_EMPLOYEE_REQUEST_SUCCESS'\r\nexport const SAVE_EMPLOYEE_REQUEST_FAILURE='SAVE_EMPLOYEE_REQUEST_FAILURE'\r\n\r\n\r\nexport const EDIT_EMPLOYEE_REQUEST='EDIT_EMPLOYEE_REQUEST'\r\nexport const EDIT_EMPLOYEE_REQUEST_SUCCESS='EDIT_EMPLOYEE_REQUEST_SUCCESS'\r\nexport const EDIT_EMPLOYEE_REQUEST_FAILURE='EDIT_EMPLOYEE_REQUEST_FAILURE'\r\n\r\nexport const DELETE_EMPLOYEE_REQUEST='DELETE_EMPLOYEE_REQUEST'\r\nexport const DELETE_EMPLOYEE_REQUEST_SUCCESS='DELETE_EMPLOYEE_REQUEST_SUCCESS'\r\nexport const DELETE_EMPLOYEE_REQUEST_FAILURE='DELETE_EMPLOYEE_REQUEST_FAILURE'","import React, { useState, useEffect, } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport EmpModel from './empModel'\r\nimport { bindActionCreators } from 'redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { fetchEmployees, postEmployee, putEmployee, deleteEmployee } from '../redux/employee/employeeActions'\r\nconst Employees = ({ employees,\r\n    getEmployees,\r\n    saveEmployee,\r\n    editEmployee,\r\n    deleteEmployee,\r\n    postResponseEmployee }) => {\r\n\r\n\r\n\r\n    const [showModalAdd, setShowModalAdd] = useState(false)\r\n    const [showModalEdit, setShowModalEdit] = useState(false)\r\n    const [showSnackbar, setSnackbar] = useState({ value: false, message: '' });\r\n    const [employee, setEmployee] = useState({ empId: 0, empName: '', depId: 0, email: '', doj: '', isEdit: false });\r\n    const showSnackbarHandle = () => {\r\n        setSnackbar({ value: !showSnackbar.value, message: postResponseEmployee })\r\n    }\r\n    const handleSaveEmployee = (empData) => {\r\n\r\n        saveEmployee(empData).then((response)=>{\r\n            response.type=='SAVE_EMPLOYEE_REQUEST_SUCCESS'?\r\n            toast.success(\"Employee added successfully\"): toast.error(response.payload)\r\n        })\r\n\r\n    }\r\n\r\n    const handleEditEmployee = (empData) => {\r\n\r\n\r\n        //editEmployee(empData, ()=>toast(\"Employee modify successfully\"))\r\n        editEmployee(empData).then((response) => {\r\n            response.type=='EDIT_EMPLOYEE_REQUEST_SUCCESS'?\r\n            toast.success(\"Employee modify successfully\"): toast.error(response.payload)\r\n           \r\n        })\r\n    }\r\n\r\n\r\n\r\n    const handleEdit = (id, name, deptId, email, doj) => {\r\n        setShowModalEdit(true)\r\n        setEmployee({ empId: id, empName: name, deptId, email, doj, isEdit: true })\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n\r\n        deleteEmployee(id).then((response)=>{\r\n            response.type=='DELETE_EMPLOYEE_REQUEST_SUCCESS'?\r\n            toast.success(\"Department remove successfully\"): toast.error(response.payload)\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('EmployeeEffect call')\r\n        getEmployees();\r\n    }, [getEmployees])\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Table className=\"mt-4\" striped border hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>EmployeeId</th>\r\n                        <th>EmployeeName</th>\r\n                        <th>DepartmentId</th>\r\n                        <th>Email</th>\r\n                        <th>Date of Joining</th>\r\n                        <th>Option</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                {employees.loading ? <ProgressBar animated now={60} /> :\r\n                    <tbody>\r\n                        {\r\n                            employees && employees.employees\r\n                            && employees.employees.map((employee, index) => (\r\n                                <tr key={index}>\r\n\r\n                                    <td>{employee.EmpId}</td>\r\n                                    <td>{employee.EmpName}</td>\r\n                                    <td>{employee.DeptId}</td>\r\n                                    <td>{employee.Email}</td>\r\n                                    <td>{employee.Doj}</td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button\r\n                                                className=\"mr-2\"\r\n                                                variant=\"info\"\r\n                                                onClick={() => handleEdit(employee.EmpId, employee.EmpName, employee.DeptId, employee.Email, employee.Doj)}\r\n\r\n                                            >\r\n                                                Edit\r\n                                        </Button>\r\n                                        </ButtonToolbar>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button\r\n                                                className=\"mr-2\"\r\n                                                variant=\"danger\"\r\n                                                onClick={() => handleDelete(employee.EmpId)}\r\n\r\n                                            >\r\n                                                Delete\r\n                                        </Button>\r\n                                        </ButtonToolbar>\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                }\r\n            </Table>\r\n            {employees.loading ? null : <ButtonToolbar>\r\n                <Button variant=\"primary\" onClick={() => { setShowModalAdd(true) }}>\r\n                    Add Employee\r\n            </Button>\r\n            </ButtonToolbar>}\r\n            <EmpModel\r\n                showSnack={showSnackbar}\r\n                snackbar={showSnackbarHandle}\r\n                editEmployee={handleEditEmployee}\r\n                show={showModalEdit}\r\n                onHide={() => setShowModalEdit(false)}\r\n                employee={employee}\r\n            />\r\n            <EmpModel\r\n                showSnack={showSnackbar}\r\n                snackbar={showSnackbarHandle}\r\n                saveEmployee={handleSaveEmployee}\r\n                show={showModalAdd}\r\n                onHide={() => setShowModalAdd(false)}\r\n\r\n            />\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        employees: state.employeeReducer,\r\n        postResponseEmployee: state.employeeReducer.message\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getEmployees: () => dispatch(fetchEmployees()),\r\n        // saveEmployee: (data) => dispatch(postEmployee(data)),\r\n        // editEmployee: (data) => dispatch(putEmployee(data)),\r\n        // deleteEmployee: (id) => dispatch(deleteEmployee(id)),\r\n\r\n        getEmployees: bindActionCreators(fetchEmployees, dispatch),\r\n        saveEmployee: bindActionCreators(postEmployee, dispatch),\r\n        editEmployee: bindActionCreators(putEmployee, dispatch),\r\n        deleteEmployee: bindActionCreators(deleteEmployee, dispatch)\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Employees));\r\n","import React from 'react';\r\nconst Footer=()=>{\r\n    console.log('footer render')\r\n    return(\r\n        <div>Footer</div>\r\n    )\r\n}\r\nexport default React.memo(Footer);","export const intialState = {\r\n    loading: false,\r\n    departments: {},\r\n    employees:{},\r\n    message:''\r\n}","import {combineReducers} from 'redux'\r\nimport {departmentReducer} from './department/departmentReducer'\r\nimport {employeeReducer} from './employee/employeeReducer'\r\nexport const rootReducer=combineReducers({departmentReducer,employeeReducer},)","import {\r\n    GET_DEPARTMENT_REQUEST,\r\n    GET_DEPARTMENT_REQUEST_SUCCESS,\r\n    GET_DEPARTMENT_REQUEST_FAILURE,\r\n    SAVE_DEPARTMENT_REQUEST,\r\n    SAVE_DEPARTMENT_REQUEST_SUCCESS,\r\n    SAVE_DEPARTMENT_REQUEST_FAILURE,\r\n    EDIT_DEPARTMENT_REQUEST,\r\n    EDIT_DEPARTMENT_REQUEST_SUCCESS,\r\n    EDIT_DEPARTMENT_REQUEST_FAILURE,\r\n    DELETE_DEPARTMENT_REQUEST,\r\n    DELETE_DEPARTMENT_REQUEST_SUCCESS,\r\n    DELETE_DEPARTMENT_REQUEST_FAILURE,\r\n\r\n}\r\n\r\n    from './departmentTypes';\r\n    import {intialState} from '../state';\r\n    import update from 'react-addons-update';\r\n\r\n// const intialState = {\r\n//     loading: false,\r\n//     departments: {},\r\n//     message:''\r\n// }\r\n\r\n// export default function commonReducer(state = initialState.IsLoadedStatus, action) {\r\n//     switch (action.type) {\r\n//       case actionTypes.UPDATE_LATEST_DOC_LOADED_STATUS_SUCCESS:\r\n//           return update(state, {LatestDoc : { $set: action.payload } });\r\n//       case actionTypes.LOAD_LIGHT_WEIGHT_DOCS_SUCCESS:\r\n//           return update(state, {LightWeightDocs : { $set: action.payload } });\r\n//       case actionTypes.UPDATE_APPLIED_JOBS_LOADED_STATUS_SUCCESS:\r\n//           return update(state, {AppliedJobs : { $set: action.payload } });\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   }\r\n\r\nexport const departmentReducer = (state = intialState, action) => {\r\n    \r\n      switch (action.type) {\r\n        case GET_DEPARTMENT_REQUEST:return{\r\n            ...state,\r\n            loading:true,\r\n           \r\n        }\r\n        \r\n        case GET_DEPARTMENT_REQUEST_SUCCESS:\r\n            return update(state, {departments : { $set: action.payload },loading:{ $set: false } });\r\n            // return{\r\n            // ...state,\r\n            // loading:false,\r\n            // departments:action.payload\r\n        \r\n        \r\n        case GET_DEPARTMENT_REQUEST_FAILURE:\r\n            return update(state, {message : { $set: action.payload },loading:{ $set: false } });\r\n            // return{\r\n        //    ...state,\r\n        //     loading:false,\r\n        //     message:action.payload\r\n        \r\n\r\n        //case actionTypes.LOAD_LIGHT_WEIGHT_DOCS_SUCCESS:\r\n            //           return update(state, {LightWeightDocs : { $set: action.payload } });\r\n\r\n        \r\n        case SAVE_DEPARTMENT_REQUEST:return{\r\n            ...state,\r\n             loading:true,\r\n             \r\n         }\r\n        \r\n        case SAVE_DEPARTMENT_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            message:'Deparment Save Successfully',\r\n            departments:action.payload\r\n           \r\n        }\r\n        \r\n        case SAVE_DEPARTMENT_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        case EDIT_DEPARTMENT_REQUEST:return{\r\n            ...state,\r\n             loading:true,\r\n             \r\n         }\r\n        \r\n        case EDIT_DEPARTMENT_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            message:'Department Modify Successfully',\r\n            departments:action.payload\r\n           \r\n        }\r\n        \r\n        case EDIT_DEPARTMENT_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        case DELETE_DEPARTMENT_REQUEST:return{\r\n            ...state,\r\n             loading:true,\r\n             \r\n         }\r\n        \r\n        case DELETE_DEPARTMENT_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            message:'Department Remove Succssfully',\r\n            departments:action.payload\r\n           \r\n        }\r\n        \r\n        case DELETE_DEPARTMENT_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        default:return{state}\r\n        \r\n\r\n    }\r\n\r\n}","import {\r\n    GET_EMPLOYEE_REQUEST,\r\n    GET_EMPLOYEE_REQUEST_SUCCESS,\r\n    GET_EMPLOYEE_REQUEST_FAILURE,\r\n    SAVE_EMPLOYEE_REQUEST,\r\n    SAVE_EMPLOYEE_REQUEST_SUCCESS,\r\n    SAVE_EMPLOYEE_REQUEST_FAILURE,\r\n    EDIT_EMPLOYEE_REQUEST,\r\n    EDIT_EMPLOYEE_REQUEST_SUCCESS,\r\n    EDIT_EMPLOYEE_REQUEST_FAILURE,\r\n    DELETE_EMPLOYEE_REQUEST,\r\n    DELETE_EMPLOYEE_REQUEST_SUCCESS,\r\n    DELETE_EMPLOYEE_REQUEST_FAILURE,\r\n}\r\n    from './employeeTypes'\r\n    import {intialState} from '../state';\r\n// const intialState = {\r\n//     loading: false,\r\n//     employees: {},\r\n//     message:''\r\n// }\r\nexport const employeeReducer = (state = intialState, action) => {\r\n      switch (action.type) {\r\n        case GET_EMPLOYEE_REQUEST:return{\r\n            ...state,\r\n            loading:true,\r\n           \r\n        }\r\n        \r\n        case GET_EMPLOYEE_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            employees:action.payload\r\n        }\r\n        \r\n        case GET_EMPLOYEE_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        case SAVE_EMPLOYEE_REQUEST:return{\r\n            ...state,\r\n             loading:true,\r\n             \r\n         }\r\n        \r\n        case SAVE_EMPLOYEE_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            message:'Employee Save Successfully',\r\n            employees:action.payload\r\n           \r\n        }\r\n        \r\n        case SAVE_EMPLOYEE_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        case EDIT_EMPLOYEE_REQUEST:return{\r\n            ...state,\r\n             loading:true,\r\n             \r\n         }\r\n        \r\n        case EDIT_EMPLOYEE_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            message:'Employee Modify Successfully',\r\n            employees:action.payload\r\n           \r\n        }\r\n        \r\n        case EDIT_EMPLOYEE_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        case DELETE_EMPLOYEE_REQUEST:return{\r\n            ...state,\r\n             loading:true,\r\n             \r\n         }\r\n        \r\n        case DELETE_EMPLOYEE_REQUEST_SUCCESS:return{\r\n            ...state,\r\n            loading:false,\r\n            message:'Employee remove successfully',\r\n            employees:action.payload\r\n           \r\n        }\r\n        \r\n        case DELETE_EMPLOYEE_REQUEST_FAILURE:return{\r\n           ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n        \r\n        default:return{state}\r\n        \r\n\r\n    }\r\n\r\n}","import {rootReducer} from './rootReducer'\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nexport const store=createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\r\nconst Home=()=>{\r\n    console.log('home render')\r\n    return(\r\n        <div>Home</div>\r\n    )\r\n}\r\nexport default React.memo(Home);","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from './components/Dashboard';\nimport Navigation from './components/navigation';\nimport Departments from './components/departments';\nimport Employees from './components/employees';\nimport Footer from './components/footer';\nimport {store} from './redux/store';\nimport {Provider} from 'react-redux'\nimport Home from './components/home'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"container\">\n      <Navigation/>\n\n      {/* <Button variant=\"primary\">Hello Bootstrap</Button> */}\n      <Switch>\n        <Route path=\"/\" component={Dashboard} exact />\n        <Route path=\"/Departments\" component={Departments} exact/>\n        <Route path=\"/Employees\" component={Employees} exact/>\n       \n      </Switch>\n      {/* <Footer/> */}\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Search from './components/search'\n\nReactDOM.render(\n  <React.StrictMode>\n   <App /> \n    {/* <Search/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}